[{"type": "code", "code": "--- /dev/null\n+++ b/requirements.yml\n@@ -0,0 +1,14 @@\n+- src: galaxyproject.galaxy\n+  version: 0.9.16\n+- src: galaxyproject.nginx\n+  version: 0.7.0\n+- src: galaxyproject.postgresql\n+  version: 1.0.3\n+- src: natefoo.postgresql_objects\n+  version: 1.1\n+- src: geerlingguy.pip\n+  version: 2.0.0\n+- src: uchida.miniconda\n+  version: 0.3.0\n+- src: usegalaxy_eu.certbot\n+  version: 0.1.5", "data": {"commit": "Add requirements", "visual": "terminal"}}, {"type": "cmd", "cmd": "ansible-galaxy install -p roles -r requirements.yml", "data": {"cmd": "true", "visual": "terminal"}}, {"type": "code", "code": "--- /dev/null\n+++ b/ansible.cfg\n@@ -0,0 +1,4 @@\n+[defaults]\n+interpreter_python = /usr/bin/python3\n+inventory = hosts\n+retry_files_enabled = false", "data": {"commit": "Add ansible.cfg", "visual": "terminal"}}, {"type": "code", "code": "--- /dev/null\n+++ b/hosts\n@@ -0,0 +1,2 @@\n+[galaxyservers]\n+gat-0.eu.training.galaxyproject.eu ansible_connection=local ansible_user=ubuntu", "data": {"commit": "Add hosts", "visual": "terminal"}}, {"type": "code", "code": "--- /dev/null\n+++ b/group_vars/galaxyservers.yml\n@@ -0,0 +1,15 @@\n+---\n+# Python 3 support\n+pip_virtualenv_command: /usr/bin/python3 -m virtualenv # usegalaxy_eu.certbot, usegalaxy_eu.tiaas2, galaxyproject.galaxy\n+certbot_virtualenv_package_name: python3-virtualenv    # usegalaxy_eu.certbot\n+pip_package: python3-pip                               # geerlingguy.pip\n+\n+# PostgreSQL\n+postgresql_objects_users:\n+  - name: galaxy\n+postgresql_objects_databases:\n+  - name: galaxy\n+    owner: galaxy\n+# PostgreSQL Backups\n+postgresql_backup_dir: /data/backups\n+postgresql_backup_local_dir: \"{{ '~postgres' | expanduser }}/backups\"", "data": {"commit": "Add initial group variables file", "visual": "terminal"}}, {"type": "code", "code": "--- /dev/null\n+++ b/galaxy.yml\n@@ -0,0 +1,13 @@\n+---\n+- hosts: galaxyservers\n+  become: true\n+  become_user: root\n+  pre_tasks:\n+    - name: Install Dependencies\n+      package:\n+        name: 'python3-psycopg2'\n+  roles:\n+    - galaxyproject.postgresql\n+    - role: natefoo.postgresql_objects\n+      become: true\n+      become_user: postgres", "data": {"commit": "Add initial galaxy playbook", "visual": "terminal"}}, {"type": "cmd", "cmd": "ansible-playbook galaxy.yml", "data": {"cmd": "true", "visual": "terminal"}}, {"type": "code", "code": "--- a/galaxy.yml\n+++ b/galaxy.yml\n@@ -5,9 +5,14 @@\n   pre_tasks:\n     - name: Install Dependencies\n       package:\n-        name: 'python3-psycopg2'\n+        name: ['acl', 'bzip2', 'git', 'make', 'python3-psycopg2', 'tar', 'virtualenv']\n   roles:\n     - galaxyproject.postgresql\n     - role: natefoo.postgresql_objects\n       become: true\n       become_user: postgres\n+    - geerlingguy.pip\n+    - galaxyproject.galaxy\n+    - role: uchida.miniconda\n+      become: true\n+      become_user: \"{{ galaxy_user.name }}\"", "data": {"commit": "Add pip, miniconda, galaxy to playbook", "visual": "terminal"}}, {"type": "code", "code": "--- a/group_vars/galaxyservers.yml\n+++ b/group_vars/galaxyservers.yml\n@@ -13,3 +13,16 @@ postgresql_objects_databases:\n # PostgreSQL Backups\n postgresql_backup_dir: /data/backups\n postgresql_backup_local_dir: \"{{ '~postgres' | expanduser }}/backups\"\n+\n+# Galaxy\n+galaxy_create_user: true\n+galaxy_separate_privileges: true\n+galaxy_manage_paths: true\n+galaxy_layout: root-dir\n+galaxy_root: /srv/galaxy\n+galaxy_user: {name: galaxy, shell: /bin/bash}\n+galaxy_commit_id: release_22.01\n+galaxy_force_checkout: true\n+miniconda_prefix: \"{{ galaxy_tool_dependency_dir }}/_conda\"\n+miniconda_version: 4.7.12\n+miniconda_manage_dependencies: false", "data": {"commit": "Configure miniconda and galaxy", "visual": "terminal"}}, {"type": "code", "code": "--- a/group_vars/galaxyservers.yml\n+++ b/group_vars/galaxyservers.yml\n@@ -26,3 +26,14 @@ galaxy_force_checkout: true\n miniconda_prefix: \"{{ galaxy_tool_dependency_dir }}/_conda\"\n miniconda_version: 4.7.12\n miniconda_manage_dependencies: false\n+\n+galaxy_config:\n+  galaxy:\n+    brand: \"\ud83e\uddec\ud83d\udd2c\ud83d\ude80\"\n+    admin_users: admin@example.org\n+    database_connection: \"postgresql:///galaxy?host=/var/run/postgresql\"\n+    file_path: /data\n+    check_migrate_tools: false\n+    tool_data_path: \"{{ galaxy_mutable_data_dir }}/tool-data\"\n+    object_store_store_by: uuid\n+    id_secret: \"{{ vault_id_secret }}\"", "data": {"commit": "Configure galaxy config", "visual": "terminal"}}, {"type": "code", "code": "--- a/group_vars/galaxyservers.yml\n+++ b/group_vars/galaxyservers.yml\n@@ -37,3 +37,28 @@ galaxy_config:\n     tool_data_path: \"{{ galaxy_mutable_data_dir }}/tool-data\"\n     object_store_store_by: uuid\n     id_secret: \"{{ vault_id_secret }}\"\n+  uwsgi:\n+    socket: 127.0.0.1:5000\n+    buffer-size: 16384\n+    processes: 1\n+    threads: 4\n+    offload-threads: 2\n+    static-map:\n+      - /static={{ galaxy_server_dir }}/static\n+      - /favicon.ico={{ galaxy_server_dir }}/static/favicon.ico\n+    static-safe: client/galaxy/images\n+    master: true\n+    virtualenv: \"{{ galaxy_venv_dir }}\"\n+    pythonpath: \"{{ galaxy_server_dir }}/lib\"\n+    module: galaxy.webapps.galaxy.buildapp:uwsgi_app()\n+    thunder-lock: true\n+    die-on-term: true\n+    hook-master-start:\n+      - unix_signal:2 gracefully_kill_them_all\n+      - unix_signal:15 gracefully_kill_them_all\n+    py-call-osafterfork: true\n+    enable-threads: true\n+    mule:\n+      - lib/galaxy/main.py\n+      - lib/galaxy/main.py\n+    farm: job-handlers:1,2", "data": {"commit": "Configure uwsgi", "visual": "terminal"}}, {"type": "cmd", "cmd": "openssl rand -base64 24 > .vault-password.txt", "data": {"cmd": "true", "visual": "terminal"}}, {"type": "code", "code": "--- a/ansible.cfg\n+++ b/ansible.cfg\n@@ -2,3 +2,4 @@\n interpreter_python = /usr/bin/python3\n inventory = hosts\n retry_files_enabled = false\n+vault_password_file = .vault-password.txt", "data": {"commit": "Setup the vault file", "visual": "terminal"}}, {"type": "code", "code": "--- /dev/null\n+++ b/group_vars/secret.yml\n@@ -0,0 +1,7 @@\n+$ANSIBLE_VAULT;1.1;AES256\n+32653961383866636531396135663630386630346237333333653633313436663439643535323964\n+6363626330336430363332643638646262316338313937320a666566306539373462386266383166\n+30326165393863633463353234613561393939326164376432633732316264636464313061383161\n+3532373937656138320a616361343664353264613332616236623231326137316635323465623562\n+66656539346130353639623736633034653932373438663330646436656336666637313933666264\n+3636313438626533633831323239373461373538646635613637", "data": {"commit": "Add id_secret to the vault", "comment": "The password is password", "visual": "terminal"}}, {"type": "code", "code": "--- a/galaxy.yml\n+++ b/galaxy.yml\n@@ -2,6 +2,8 @@\n - hosts: galaxyservers\n   become: true\n   become_user: root\n+  vars_files:\n+    - group_vars/secret.yml\n   pre_tasks:\n     - name: Install Dependencies\n       package:", "data": {"commit": "Load the vault in the playbook", "visual": "terminal"}}, {"type": "cmd", "cmd": "ansible-playbook galaxy.yml", "data": {"cmd": "true", "visual": "terminal"}}, {"type": "code", "code": "--- a/group_vars/galaxyservers.yml\n+++ b/group_vars/galaxyservers.yml\n@@ -62,3 +62,6 @@ galaxy_config:\n       - lib/galaxy/main.py\n       - lib/galaxy/main.py\n     farm: job-handlers:1,2\n+\n+# systemd\n+galaxy_manage_systemd: yes", "data": {"commit": "Setup systemd variables", "visual": "terminal"}}, {"type": "cmd", "cmd": "ansible-playbook galaxy.yml", "data": {"cmd": "true", "visual": "terminal"}}, {"type": "code", "code": "--- a/galaxy.yml\n+++ b/galaxy.yml\n@@ -18,3 +18,4 @@\n     - role: uchida.miniconda\n       become: true\n       become_user: \"{{ galaxy_user.name }}\"\n+    - galaxyproject.nginx", "data": {"commit": "Add nginx to playbook", "visual": "terminal"}}, {"type": "code", "code": "--- a/group_vars/galaxyservers.yml\n+++ b/group_vars/galaxyservers.yml\n@@ -65,3 +65,33 @@ galaxy_config:\n \n # systemd\n galaxy_manage_systemd: yes\n+\n+# Certbot\n+certbot_auto_renew_hour: \"{{ 23 |random(seed=inventory_hostname)  }}\"\n+certbot_auto_renew_minute: \"{{ 59 |random(seed=inventory_hostname)  }}\"\n+certbot_auth_method: --webroot\n+certbot_install_method: virtualenv\n+certbot_auto_renew: yes\n+certbot_auto_renew_user: root\n+certbot_environment: staging\n+certbot_well_known_root: /srv/nginx/_well-known_root\n+certbot_share_key_users:\n+  - nginx\n+certbot_post_renewal: |\n+    systemctl restart nginx || true\n+certbot_domains:\n+ - \"{{ inventory_hostname }}\"\n+certbot_agree_tos: --agree-tos\n+\n+# NGINX\n+nginx_selinux_allow_local_connections: true\n+nginx_servers:\n+  - redirect-ssl\n+nginx_ssl_servers:\n+  - galaxy\n+nginx_enable_default_server: false\n+nginx_conf_http:\n+  client_max_body_size: 1g\n+nginx_ssl_role: usegalaxy_eu.certbot\n+nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem\n+nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem", "data": {"commit": "Configure nginx, certbot", "visual": "terminal"}}, {"type": "code", "code": "--- /dev/null\n+++ b/templates/nginx/redirect-ssl.j2\n@@ -0,0 +1,14 @@\n+server {\n+    listen 80 default_server;\n+    listen [::]:80 default_server;\n+\n+    server_name \"{{ inventory_hostname }}\";\n+\n+    location /.well-known/ {\n+        root {{ certbot_well_known_root }};\n+    }\n+\n+    location / {\n+        return 302 https://$host$request_uri;\n+    }\n+}", "data": {"commit": "Setup http to https redirect", "visual": "terminal"}}, {"type": "code", "code": "--- /dev/null\n+++ b/templates/nginx/galaxy.j2\n@@ -0,0 +1,49 @@\n+server {\n+    # Listen on port 443\n+    listen        *:443 ssl default_server;\n+    # The virtualhost is our domain name\n+    server_name   \"{{ inventory_hostname }}\";\n+\n+    # Our log files will go here.\n+    access_log  /var/log/nginx/access.log;\n+    error_log   /var/log/nginx/error.log;\n+\n+    # The most important location block, by default all requests are sent to uWSGI\n+    location / {\n+        # This is the backend to send the requests to.\n+        uwsgi_pass {{ galaxy_config.uwsgi.socket }};\n+        uwsgi_param UWSGI_SCHEME $scheme;\n+        include uwsgi_params;\n+    }\n+\n+    # Static files can be more efficiently served by Nginx. Why send the\n+    # request to uWSGI which should be spending its time doing more useful\n+    # things like serving Galaxy!\n+    location /static {\n+        alias {{ galaxy_server_dir }}/static;\n+        expires 24h;\n+    }\n+\n+    # In Galaxy instances started with run.sh, many config files are\n+    # automatically copied around. The welcome page is one of them. In\n+    # production, this step is skipped, so we will manually alias that.\n+    location /static/welcome.html {\n+        alias {{ galaxy_server_dir }}/static/welcome.html.sample;\n+        expires 24h;\n+    }\n+\n+    # serve visualization and interactive environment plugin static content\n+    location ~ ^/plugins/(?<plug_type>[^/]+?)/((?<vis_d>[^/_]*)_?)?(?<vis_name>[^/]*?)/static/(?<static_file>.*?)$ {\n+        alias {{ galaxy_server_dir }}/config/plugins/$plug_type/;\n+        try_files $vis_d/${vis_d}_${vis_name}/static/$static_file\n+                  $vis_d/static/$static_file =404;\n+    }\n+\n+    location /robots.txt {\n+        alias {{ galaxy_server_dir }}/static/robots.txt;\n+    }\n+\n+    location /favicon.ico {\n+        alias {{ galaxy_server_dir }}/static/favicon.ico;\n+    }\n+}", "data": {"commit": "Configure nginx vhost for galaxy", "visual": "terminal"}}, {"type": "cmd", "cmd": "ansible-playbook galaxy.yml", "data": {"cmd": "true", "visual": "terminal"}}, {"type": "cmd", "cmd": "mkdir -p templates/galaxy/config/", "data": {"cmd": "true", "visual": "terminal"}}, {"type": "code", "code": "--- /dev/null\n+++ b/templates/galaxy/config/job_conf.xml.j2\n@@ -0,0 +1,10 @@\n+<job_conf>\n+    <plugins workers=\"4\">\n+        <plugin id=\"local_plugin\" type=\"runner\" load=\"galaxy.jobs.runners.local:LocalJobRunner\"/>\n+    </plugins>\n+    <destinations default=\"local_destination\">\n+        <destination id=\"local_destination\" runner=\"local_plugin\"/>\n+    </destinations>\n+    <tools>\n+    </tools>\n+</job_conf>", "data": {"commit": "Add job conf", "visual": "terminal"}}, {"type": "code", "code": "--- a/group_vars/galaxyservers.yml\n+++ b/group_vars/galaxyservers.yml\n@@ -37,6 +37,7 @@ galaxy_config:\n     tool_data_path: \"{{ galaxy_mutable_data_dir }}/tool-data\"\n     object_store_store_by: uuid\n     id_secret: \"{{ vault_id_secret }}\"\n+    job_config_file: \"{{ galaxy_config_dir }}/job_conf.xml\"\n   uwsgi:\n     socket: 127.0.0.1:5000\n     buffer-size: 16384", "data": {"commit": "Load job conf in galaxy config", "visual": "terminal"}}, {"type": "code", "code": "--- a/group_vars/galaxyservers.yml\n+++ b/group_vars/galaxyservers.yml\n@@ -64,6 +64,10 @@ galaxy_config:\n       - lib/galaxy/main.py\n     farm: job-handlers:1,2\n \n+galaxy_config_templates:\n+  - src: templates/galaxy/config/job_conf.xml.j2\n+    dest: \"{{ galaxy_config.galaxy.job_config_file }}\"\n+\n # systemd\n galaxy_manage_systemd: yes\n ", "data": {"commit": "Deploy job conf to config dir", "visual": "terminal"}}, {"type": "cmd", "cmd": "ansible-playbook galaxy.yml", "data": {"cmd": "true", "visual": "terminal"}}, {"type": "code", "code": "--- a/group_vars/galaxyservers.yml\n+++ b/group_vars/galaxyservers.yml\n@@ -38,6 +38,28 @@ galaxy_config:\n     object_store_store_by: uuid\n     id_secret: \"{{ vault_id_secret }}\"\n     job_config_file: \"{{ galaxy_config_dir }}/job_conf.xml\"\n+    # SQL Performance\n+    database_engine_option_server_side_cursors: true\n+    slow_query_log_threshold: 5\n+    enable_per_request_sql_debugging: true\n+    # File serving Performance\n+    nginx_x_accel_redirect_base: /_x_accel_redirect\n+    # Automation / Ease of Use / User-facing features\n+    watch_job_rules: 'auto'\n+    allow_path_paste: true\n+    enable_quotas: true\n+    allow_user_deletion: true\n+    show_welcome_with_login: true\n+    expose_user_name: true\n+    expose_dataset_path: true\n+    expose_potentially_sensitive_job_metrics: true\n+    # NFS workarounds\n+    retry_job_output_collection: 3\n+    # Debugging\n+    cleanup_job: onsuccess\n+    allow_user_impersonation: true\n+    # Tool security\n+    outputs_to_working_directory: true\n   uwsgi:\n     socket: 127.0.0.1:5000\n     buffer-size: 16384", "data": {"commit": "Add production facing vars", "visual": "terminal"}}, {"type": "code", "code": "--- a/templates/nginx/galaxy.j2\n+++ b/templates/nginx/galaxy.j2\n@@ -46,4 +46,14 @@ server {\n     location /favicon.ico {\n         alias {{ galaxy_server_dir }}/static/favicon.ico;\n     }\n+\n+    location /_x_accel_redirect {\n+        internal;\n+        alias /;\n+    }\n+\n+    # Support click-to-run in the GTN-in-Galaxy Webhook\n+    location /training-material/ {\n+        proxy_pass https://training.galaxyproject.org/training-material/;\n+    }\n }", "data": {"commit": "Add nginx x-accel-redir and g-i-g webhook config to nginx", "visual": "terminal"}}, {"type": "cmd", "cmd": "ansible-playbook galaxy.yml", "data": {"cmd": "true", "visual": "terminal"}}, {"type": "cmd", "cmd": "ansible-playbook galaxy.yml", "data": {"cmd": "true", "visual": "terminal"}}]